/**
 * Source file for the Encoder_convert model
 * Generated by the TERRA CSPm2LUNA generator version 1.1.3
 *
 * protected region document description on begin
 *
 * protected region document description end
 */

#include "Encoder_convert.h"
// protected region additional headers on begin
// Each additional header should get a corresponding dependency in the Makefile
// protected region additional headers end

namespace Encoder_convert { 

Encoder_convert::Encoder_convert(ChannelOut<uint32_t> *inputport, ChannelIn<double> *outputport) :
    Sequential(NULL)
{
  SETNAME(this, "Encoder_convert");

  // Initialize model objects
  myencoder_reader = new Reader<uint32_t>(&input, inputport);
  SETNAME(myencoder_reader, "encoder_reader");
  myencoderconvert = new encoderconvert::encoderconvert(input, output);
  SETNAME(myencoderconvert, "encoderconvert");
  myendocer_writer = new Writer<double>(&output, outputport);
  SETNAME(myendocer_writer, "endocer_writer");


  // Register model objects
  this->append_child(myencoder_reader);
  this->append_child(myencoderconvert);
  this->append_child(myendocer_writer);

  // protected region constructor on begin
  // protected region constructor end
}

Encoder_convert::~Encoder_convert()
{
  // TODO Properly destroy all additional objects that got defined in the constructor

  // protected region destructor on begin
  // protected region destructor end

  // Destroy model objects
  delete myendocer_writer;
  delete myencoderconvert;
  delete myencoder_reader;
}



// protected region additional functions on begin
// protected region additional functions end

// Close namespace(s)
} 
