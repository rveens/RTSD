/**
 * Source file for the ver_convert model
 * Generated by the TERRA CSPm2LUNA generator version 1.1.3
 *
 * protected region document description on begin
 *
 * protected region document description end
 */

#include "ver_convert.h"
// protected region additional headers on begin
// Each additional header should get a corresponding dependency in the Makefile
// protected region additional headers end

namespace IO { namespace ver_convert { 

ver_convert::ver_convert(double &ver_input, uint16_t &ver_output) :
    CodeBlock(), ver_input(ver_input), ver_output(ver_output){
  SETNAME(this, "ver_convert");

  // protected region constructor on begin

  // protected region constructor end
}

ver_convert::~ver_convert()
{
  // protected region destructor on begin
  // protected region destructor end
}

void ver_convert::execute()
{
  // protected region execute code on begin
	this->ver_output = convert(this->ver_input);
	printf("Vertical: in: %f, out: %d\n", ver_input, ver_output);
  // protected region execute code end
}

// protected region additional functions on begin
uint16_t ver_convert::convert(double f)
{
	int16_t deadzone = 1000;

	int16_t n = f*(32768-deadzone);
	if(n>0)
		n += deadzone;
	else if(n<0)
		n -= deadzone;

	return (uint16_t)n;
}
// protected region additional functions end

// Close namespace(s)
} } 
