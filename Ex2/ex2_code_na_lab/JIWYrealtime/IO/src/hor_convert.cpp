/**
 * Source file for the hor_convert model
 * Generated by the TERRA CSPm2LUNA generator version 1.1.3
 *
 * protected region document description on begin
 *
 * protected region document description end
 */

#include "hor_convert.h"
// protected region additional headers on begin
// Each additional header should get a corresponding dependency in the Makefile
// protected region additional headers end

namespace IO { namespace hor_convert { 

hor_convert::hor_convert(double &hor_input, uint16_t &hor_output) :
    CodeBlock(), hor_input(hor_input), hor_output(hor_output){
  SETNAME(this, "hor_convert");

  // protected region constructor on begin

  // protected region constructor end
}

hor_convert::~hor_convert()
{
  // protected region destructor on begin
  // protected region destructor end
}

void hor_convert::execute()
{
  // protected region execute code on begin
	this->hor_output = convert(this->hor_input);
	printf("Horizontal: in: %f, out: %d\n", hor_input, hor_output);
  // protected region execute code end
}

// protected region additional functions on begin
uint16_t hor_convert::convert(double f)
{
	int16_t deadzone = 1000;

	int16_t n = f*(32768-deadzone);
	if(n>0)
		n += deadzone;
	else if(n<0)
		n -= deadzone;

	return (uint16_t)n;
}
// protected region additional functions end

// Close namespace(s)
} } 
