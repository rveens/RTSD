/**
 * Source file for the encodervert model
 * Generated by the TERRA CSPm2LUNA generator version 1.1.3
 *
 * protected region document description on begin
 *
 * protected region document description end
 */

#include "encodervert.h"
// protected region additional headers on begin
#include <cmath>\
// Each additional header should get a corresponding dependency in the Makefile
// protected region additional headers end

namespace Encoder_vert { namespace encodervert { 

encodervert::encodervert(uint32_t &input, double &output) :
    CodeBlock(), input(input), output(output){
  SETNAME(this, "encodervert");

  // protected region constructor on begin

  // protected region constructor end
}

encodervert::~encoderconvert()
{
  // protected region destructor on begin
  // protected region destructor end
}

void encodervert::execute()
{
  // protected region execute code on begin
	this->output = scale(convert(this->input));
	printf("%f\n", this->output);
  // protected region execute code end
}

// protected region additional functions on begin
double encodervert::convert(uint32_t i)
{
	return (int32_t)i;
}

double encodervert::scale(double n)
{
	return ((n-588)/(506+588) - 1000)*2*M_PI;
}

// Close namespace(s)
} } 
