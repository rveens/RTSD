# Makefile for overview.archm for QNX target platform
# Generated by the TERRA Arch2LUNA generator version 1.0.0
#
# protected region document description on begin
# protected region document description end

SOURCE_FILES=src/main.cpp src/MainModel.cpp

# Targets are expanded a second time, just before the rule is used
.SECONDEXPANSION:

# Contains the compiler commands that were used to build LUNA
-include /opt/LUNA/target-i386-qnx6.5.0_i586_CSP/lib/../tools.mk
ifneq ($(QNX_BUILD),1)
  $(warning The generated code is for QNX, while tools.mk does not indicate that LUNA is build for QNX)
endif

# Additional commands
RM=rm -rf
MKDIR=mkdir -p

# Compiler/Linker flags
LDFLAGS+=-L/opt/LUNA/target-i386-qnx6.5.0_i586_CSP/lib
CPPFLAGS+=-Iinclude -I/opt/LUNA/target-i386-qnx6.5.0_i586_CSP/include
LIBS+=-lLUNA

# Add external model paths
CPPFLAGS+= -I ../Encoder_convert/include -I ../JIWY/include -I ../Joystick/include -I ../PositionControllerTilt/include -I ../PositionControllerPan/include
LDFLAGS+= -L ../Encoder_convert/lib -L ../JIWY/lib -L ../Joystick/lib -L ../PositionControllerTilt/lib -L ../PositionControllerPan/lib
LIBS:= -lPositionControllerTilt -lPositionControllerPan -lEncoder_convert -lJIWY -lJoystick $(LIBS) -lm



# Required by the RTLogger on QNX (or other applications that use the socket library)
LIBS+=-lsocket

## protected region to add additional statements on begin
# For example, use this region to add additional files that are required:
#SOURCE_FILES+=xxsim/PID/PID.cpp $(wildcard xxsim/common/*.cpp)
#CPPFLAGS+=-Ixxsim/PID -Ixxsim/common 

# QNX HID library (eg for Joystick support)
LIBS+=-lhiddi

## protected region to add additional statements end

OBJECT_FILES=$(patsubst src/%.cpp,obj/%.o,$(SOURCE_FILES))

all: overview

overview: $(OBJECT_FILES)
	$(CXX) $(LDFLAGS) $^ $(LIBS) -o $@

obj/%.o: src/%.cpp | $$(@D)
	$(CXX) -c $(CPPFLAGS) -o $@ $<

clean:
	$(RM) obj lib overview

# Targets for creating directories
uniq = $(strip $(if $1,$(firstword $1) $(call uniq,$(filter-out $(firstword $1),$1))))
DIRS:=$(call uniq,$(patsubst %/,%,lib/ $(dir $(OBJECT_FILES))))

define DirectoryTarget
  $(foreach directory, $(DIRS),
    $(directory):
	$(MKDIR) $(directory)
  )
endef
$(eval $(call DirectoryTarget))

# Dependencies
overview: ../JIWY/lib/libJIWY.a
overview: ../Joystick/lib/libJoystick.a
overview: ../Encoder_convert/lib/libEncoder_convert.a
overview: ../Encoder_convert/lib/libEncoder_convert.a
overview: ../PositionControllerTilt/lib/libPositionControllerTilt.a
overview: ../PositionControllerPan/lib/libPositionControllerPan.a
obj/main.o: include/MainModel.h
obj/MainModel.o: include/MainModel.h ../Encoder_convert/include/Encoder_convert/Encoder_convert.h ../Encoder_convert/include/Encoder_convert/Encoder_convert.h ../JIWY/include/JIWY/JIWY.h ../Joystick/include/Joystick/Joystick.h ../PositionControllerTilt/include/PositionControllerTilt/PositionControllerTilt.h ../PositionControllerPan/include/PositionControllerPan/PositionControllerPan.h

# protected region additional targets on begin
# protected region additional targets end