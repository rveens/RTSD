/**
 * Source file for the PCode model
 * Generated by the TERRA CSPm2LUNA generator version 1.1.1
 *
 * protected region document description on begin
 *
 * protected region document description end
 */

#include "Producer12/PCode.h"
#include "string.h"
// protected region additional headers on begin
// Each additional header should get a corresponding dependency in the Makefile
// protected region additional headers end

namespace MainModel { namespace Producer12 { namespace PCode { 

PCode::PCode(int &PCode_anotherValue, int &PCode_someValue) :
    CodeBlock(), PCode_anotherValue(PCode_anotherValue), PCode_someValue(PCode_someValue){
  SETNAME(this, "PCode");

  // protected region constructor on begin
  // protected region constructor end
}

PCode::~PCode()
{
  // protected region destructor on begin
  // protected region destructor end
}

void PCode::execute()
{
  // protected region execute code on begin

	static int index = 0;

	char *stuff = "Appelflap";

	if (index == strlen(stuff)) {
		this->PCode_someValue = -1;
		this->PCode_anotherValue = -1;
	} else {
		this->PCode_someValue = stuff[index];
		this->PCode_anotherValue = stuff[index++];

		printf("Sending: PCode_someValue: \t'%c'\n", this->PCode_someValue);
		printf("Sending: PCode_anotherValue: \t'%c'\n", this->PCode_anotherValue);
	}


  // protected region execute code end
}

// protected region additional functions on begin
// protected region additional functions end

// Close namespace(s)
} } } 
