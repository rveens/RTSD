-- Generated by TERRA CSPm2CSP version 1.0.2
-- Input file: fwdEulerMethod.cspm

-- Channels
channel channel_LoopController_dxWriter_to_Plant_dxReader
channel channel_Plant_xWriter_to_LoopController_xReader
channel channel_Timer_stepWriter_to_LoopController_uReader

-- Processes
MainModel_PARALLEL = MainModel_Timer [| {| channel_Timer_stepWriter_to_LoopController_uReader |} |] (MainModel_LoopController [| {| channel_LoopController_dxWriter_to_Plant_dxReader , channel_Plant_xWriter_to_LoopController_xReader |} |] MainModel_Plant)
MainModel_Timer = if (true) then (Timer_SEQUENTIAL ) ; MainModel_Timer else SKIP
Timer_SEQUENTIAL = Timer_StepFunction ; Timer_stepWriter
Timer_StepFunction = SKIP
Timer_stepWriter = channel_Timer_stepWriter_to_LoopController_uReader -> SKIP
MainModel_LoopController = if (true) then (LoopController_SEQUENTIAL ) ; MainModel_LoopController else SKIP
LoopController_SEQUENTIAL = LoopController_PARALLEL ; LoopController_Controller ; LoopController_dxWriter
LoopController_PARALLEL = LoopController_xReader ||| LoopController_uReader
LoopController_xReader = channel_Plant_xWriter_to_LoopController_xReader -> SKIP
LoopController_uReader = channel_Timer_stepWriter_to_LoopController_uReader -> SKIP
LoopController_Controller = SKIP
LoopController_dxWriter = channel_LoopController_dxWriter_to_Plant_dxReader -> SKIP
MainModel_Plant = if (true) then (Plant_SEQUENTIAL ) ; MainModel_Plant else SKIP
Plant_SEQUENTIAL = Plant_xWriter ; Plant_dxReader ; Plant_Plant
Plant_xWriter = channel_Plant_xWriter_to_LoopController_xReader -> SKIP
Plant_dxReader = channel_LoopController_dxWriter_to_Plant_dxReader -> SKIP
Plant_Plant = SKIP

-- Idle process
channel idle
IDLE = idle -> IDLE

-- Assert the toplevel
assert MainModel_PARALLEL :[deadlock free [F]]
assert MainModel_PARALLEL;IDLE :[deadlock free [F]]

-- protected region user defined area on begin --
-- protected region user defined area end --
